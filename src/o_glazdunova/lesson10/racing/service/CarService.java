package o_glazdunova.lesson10.racing.service;

import o_glazdunova.lesson10.racing.model.Car;
import org.jetbrains.annotations.NotNull;

public class CarService {//создаем условия для гонки. Какая машина, за какое время и за какую дистанцию приедет первой
    //сколько раз надо будет менять резину
    public int timeOfRace(@NotNull Car car, int distance) {// создает время гонки и дистанцию (км в цифрах)
    int time;
    int speed =  (car.getEngine().getPower() * 100) / car.getWeight();// скорость машины = двигатель и мощность машины *
        // * 100 / вес машины

// если максимальная скорость машины меньше, чем ту что мы выщитаем,то присвоим ей существующую максимальную скорость
 // наших машин

        if (car.getMaxSpeed() < speed) { //максимальная скорость машины меньше, чем ту что мы выщитаем
        speed = car.getMaxSpeed(); //скорость, которую мы высчитывакм = макс скорости одной из наших машин
    }

    time = distance / speed;// время = время гонки и дистанция / скорость, к-ую высчитываем


// Если дистанция больше, чем пробег резины и максимальная дистанция проезда
    if (distance > car.getWheel().getMaxDistance()) {

        //Сколько раз мы должны заменить резину
        //Переводим в double так как число для замены резины будет с дробью
        double wheelMaxDistance = car.getWheel().getMaxDistance(); // максимальная дистанция резины = пробег резины и
        // и максимальная дистанция проезда
        double doubleDistance = distance; // перевели

        /** Делим дистанцию гонки на макс. дист. резины и отнимаем 1
         *   Берем целое число.
         *   ЕСЛИ: остается остаток после запятой, плюсуем 1
         *   ЕСЛИ: остатка нет, оставляем наше целое
         */
        double countOfWheelChange = (doubleDistance / wheelMaxDistance - 1) ;// количество замены резины =
        // = дистанция гонки / максимальную дистанцию резины - 1

        // time += ...   то же самое что      time = time + ...
        time += countOfWheelChange * 15; // время = время + количество смен резины *15 минут для замены колес
    }
    return time;
}

}

// Домашка: Добавить метод, который говорит: подходит машина для гонки или нет.
//можно создать еще машины (ГОНОЧНЫЕ / НЕГОНОЧНЫЕ)и посмотреть все ли машины могут участвовать в гонке (создать массив
// и отсеять те машины, которые не смогут участвовать в гонке)
